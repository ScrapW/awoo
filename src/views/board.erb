<!DOCTYPE HTML>
<html>
  <head>
    <title>/<%= Config.get['boards'][path]['name'] %>/ - <%= Config.get['boards'][path]['desc'] %></title>
    <style>
    #draggable {
      width: 320px;
      height: auto;
      padding: 0.5em;
      background-color: black;
      border: 1px solid white;
      text-align: center;
      color: white;
    }
    textarea {
      resize: none;
      width: 90%;
      height: 130px;
    }
    #hover {
      position: fixed;
      background-color: rgba(255, 255, 255, 0.6);
      font-size: 70%;
      border-radius: 4px;
      padding: 4px;
      color: black;
      z-index: 10;
    }
    </style>
    <script src="/static/js/jquery-3.2.1.min.js"></script>
    <script src="/static/js/jquery-ui.min.js"></script>
    <script>
      var newThread = function newThread() {
        if(document.getElementById("draggable").style.display == "none") {
          document.getElementById("draggable").style.display = "block";
          document.getElementById("newthread").innerHTML = "Close";
          $( "#draggable" ).draggable({containment: "window"});
          document.getElementById("title").style.width = document.getElementById("comment").clientWidth.toString() + "px";
        }
        else {
          document.getElementById("newthread").innerHTML = "Start a new thread";
          document.getElementById("draggable").style.display = "none";
        }
      }
      var ol = function ol() {
        document.getElementById("draggable").style.display = "none";
        doWordcount("comment", <%= JSON.dump(session[:moderates] ? true : false) %>);
        Array.prototype.slice.call(document.getElementsByClassName("fa"), 0).forEach(function(elem) {
          elem.onmousemove = function(e) { move(e); }; // SHOULDN'T NEED THE WRAPPING FUNCTION BUT I DO
          elem.onmouseover = function() { hover(elem); };
          elem.onmouseout = function() { unhover(); };
        });
        var hover = function(elem) {
          var tooltip = document.getElementById("hover");
          tooltip.style.display = "inline-block";
          if (elem.classList.contains("fa-lock")) {
            tooltip.innerText = "Unlock thread"
          } else if (elem.classList.contains("fa-unlock-alt")) {
            tooltip.innerText = "Lock thread"
          } else if (elem.classList.contains("fa-ban")) {
            tooltip.innerText = "Unsticky thread"
          } else if (elem.classList.contains("fa-trash")) {
            tooltip.innerText = "Delete thread"
          } else if (elem.classList.contains("fa-refresh")) {
            tooltip.innerText = "Move thread"
          } else {
            tooltip.innerText = "Sticky thread"
          }
          console.log(tooltip.innerText)
        }
        var move = function move(e) {
          var tooltip = document.getElementById("hover");
          tooltip.style.top = e.clientY + 5 + "px"
          tooltip.style.left = e.clientX + 5 + "px"
          console.log(tooltip.style.display)
        }
        var unhover = function() {
          document.getElementById("hover").style.display = "none";
        }
        var boardselector = document.getElementById("board");
        var submitbtn = document.getElementById("submit");
        <% if path == "all" %>submitbtn.disabled = true;
        submitbtn.className = "special_styled";<% end %>
        boardselector.addEventListener("change", function(){ //only because of the russian spammers
          if (boardselector.value != "nowhere") {
            submitbtn.disabled = false;
            submitbtn.className = "button_styled";
          } else {
            submitbtn.disabled = true;
            submitbtn.className = "special_styled";
          }
        });
        <%= mobile_js %>
      }
      var begin_multiban = function begin_multiban() {
        // stop infinite scrolling, maybe?
        document.getElementById("pagecount_container").outerHTML = "";
        Array.prototype.slice.call(document.getElementsByClassName("threada"), 0).forEach(function(a) {
          a.style.maxWidth = "80%";
          var cbox = document.createElement("input");
          cbox.type = "checkbox";
          cbox.setAttribute("data-thread", a.getAttribute("data-thread"));
          cbox.style.margin = "0";
          cbox.style.width = "20%";
          cbox.style.float = "left";
          cbox.style.clear = "both";
          cbox.style.height = "40px";
          cbox.classList.add("bnd-cbox")
          if (a.innerText.toLowerCase().indexOf("reol") >= 0) {
            cbox.checked = true;
          }
          a.style.minHeight = "40px";
          a.parentNode.insertBefore(cbox, a);
        });
        var oldbtn = document.getElementById("begin_multiban");
        var parent = oldbtn.parentElement;
        var nextnode = oldbtn.nextElementSibling;
        oldbtn.outerHTML = "";
        var newbtn = document.createElement("button");
        newbtn.classList.add("button_styled")
        newbtn.innerText = "Delete & Ban";
        newbtn.addEventListener("click", function() {
          var to_delete = [];
          Array.prototype.slice.call(document.getElementsByClassName("bnd-cbox"), 0).forEach(function(cbox) {
            if (cbox.checked) {
              to_delete.push(cbox.getAttribute("data-thread"));
            }
          });
          var xhr = new XMLHttpRequest();
          xhr.onreadystatechange = function() {
            if (xhr.readyState == 4) {
              if (xhr.status != 200) {
                alert("errno = -EINVAL; return;\n\n" + xhr.responseText)
              } else {
                window.location.reload();
              }
            }
          }
          xhr.open("POST", "/bnd");
          xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
          xhr.send("posts=" + encodeURIComponent(JSON.stringify(to_delete)));
        });
        nextnode.parentElement.insertBefore(newbtn, nextnode);
      }
    </script>
    <script src="/static/common.js"></script>
    <link rel="stylesheet" type="text/css" href="/static/dangeru.css">
    <link rel="stylesheet" type="text/css" href="/static/css/font-awesome.min.css">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta property="og:url" content="http://<%= Config.get['hostname']%>/<%= path %>">
    <meta property="og:title" content="/<%= Config.get['boards'][path]['name'] %>/">
    <meta property="og:description" content="<%= Config.get['boards'][path]['desc'] %>">
    <link rel="shortcut icon" href="/static/favicon.ico">
  </head>
  <body onLoad='ol();'>
    <%= erb :boardcontainer %>
    <div id="hover" style="display: none;"></div>
  <div id="sitecorner" style="text-align: center;">
    <a href="javascript:location.reload();"><img src="<%= banner %>" alt="danger/u/"></a>
    <div id="boardtitle">/<%= Config.get['boards'][path]['name'] %>/ - <%= Config.get['boards'][path]['desc'] %></div>
    <% hide_newthread = "onClick='newThread()'" %>
    <% hide_newthread = "style='color: #ED145B;'" if archive %> <!-- TODO refactor into class so it can be themed -->
    <% newthread_text = "Start a new thread" %>
    <% newthread_text = "Archive" if archive %>
    <span <%= hide_newthread %> id="newthread"><%= newthread_text %></span>
    <div id="draggable" class="ui-widget-content">
      <% if not archive %>
        <form action="/post" method="post" name="newthread" onSubmit='var submit = document.getElementById("submit"); submit.disabled = true; submit.classList.remove("button_styled"); submit.classList.add("special_styled")'>
          <% if path == "all" %>
            Post to:
            <select name="board" id="board">
              <option value="nowhere">* SELECT A BOARD *</option>
              <% Config.get["boards"].select do |key, value| session[:username] or not value["hidden"] end.each do |key, value| %>
                <% if key == "all" then next end %>
                <option value="<%= key %>">
                  <%= key %> - <%= value["desc"] %>
                </option>
              <% end %>
            </select>
            <br />
          <% else %>
            <input style='display: none;' type='text' name='board' id='board' value='<%= path %>' />
          <% end %>
          <% if path == "burg" %>
            <input style='display: none;' type='text' name='title' id='title' value='burg' />
            <input type="radio" value="burg" id="burg" name="comment" /><label class="comment-styled" for="burg">burg</label><br />
            <!-- js fixes -->
            <input type="text" id="comment" style="display: none" /><span style="display: none;" id="wordcount"></span>
            <!-- end js fixes -->
            <input type="radio" value="angry burg" id="angry_burg" name="comment" /><label class="comment-styled" for="angry_burg">angry burg</label><br />
          <% else %>
            <div class="comment">Title</div>
            <input type="text" name="title" id="title" placeholder="Title" />
            <div class="comment">Comment</div>
            <textarea name="comment" id="comment"></textarea>
            <%# Janitors of at least one board can capcode on ANY board %>
            <% if session[:username] %>
              <br />
              <%= erb :capcode_dropdown, :locals => {:config => Config.get, :session => session} %>
              <br />
            <% end %>
            <div id="wordcount" class="comment" style="float: left;"></div><br />
          <% end %>
          <%= erb :captcha, :locals => {:value => Xsrf.board(path)} %>
          <input type="submit" id="submit" name="submit" class="button_styled" value="Send" /><br />
        </form>
      <% end %>
    </div>
    <% if moderator and has_permission(session, "edit_wordfilters") %>
      <hr />
      <a href="/<%= path %>/word-filter">Edit word filters</a>
    <% end %>
    <% if moderator and has_permission(session, "delete") and has_permission(session, "ban") %>
      <hr />
      <button class="button_styled" id="begin_multiban" onclick='begin_multiban()'>Begin Multi-Ban &amp; Delete</button>
    <% end %>
    <% if page != 0 %>
      <hr />
      <div class="comment-styled">You are viewing older posts</div>
      <a href="<%= page_url_generator.call(path, request, params, page - 1) %>">Previous Page</a>
      <a href="<%= page_url_generator.call(path, request, params, 0) %>">First Page</a>
    <% end %>
    <% if popular %>
      <hr />
      <%= erb :popular, :locals => {:popular => popular, :session => session} %>
    <% end %>
    <hr />
    <% ress.each do |res| %>
      <% classes = ["threada"] %>
      <% if res[:is_locked] then classes.push "locked" end %>
      <% if res[:stickyness] then
           classes.push("sticky-" + res[:stickyness].to_s)
           classes.delete_if do |x| x == "locked" end
      end %>
      <% if path == "burg" then res[:title] = "burg" end %>
        <a style="display: inline-block;" data-replies="<%= res[:number_of_replies] %>" href="/<%= res[:board] %>/thread/<%= res[:post_id] %>" class="<%= classes.join(" ") %>" data-thread="<%= res[:post_id] %>">
        <% if path == "all" then %>
          <span class="all_extra_board">/<%= res[:board] %>/</span>
        <% end %>
        <%= Awoo.clean(res[:title]) %>
      </a>
      <% if moderator and has_permission(session, "lock") %>
        <% if res[:is_locked] %>
          <i class="fa fa-lock" aria-hidden="true" onClick='unlockPost(<%= res[:post_id] %>)'></i>
        <% else %>
          <i class="fa fa-unlock-alt" aria-hidden="true" onClick='lockPost(<%= res[:post_id] %>)'></i>
        <% end %>
      <% end %>
      <% if moderator and has_permission(session, "sticky") %>
        <%# Sticky / Unsticky post %>
        <% if not res[:sticky] %>
          <i class="fa fa-thumb-tack" aria-hidden="true" onClick='stickyPost(<%= res[:post_id] %>)'></i>
        <% else %>
          <i class="fa fa-ban" aria-hidden="true" onClick='unstickyPost(<%= res[:post_id] %>)'></i>
        <% end %>
      <% end %>
      <% if moderator and has_permission(session, "delete") %>
        <i class="fa fa-trash" aria-hidden="true" onClick='deletePost(<%= res[:post_id] %>)'></i>
      <% end %>
      <% if moderator and has_permission(session, "move") %>
        <i class="fa fa-refresh" aria-hidden="true" onClick="window.location.replace('/move/<%= res[:post_id] %>');"></i>
      <% end %>
      <% if moderator and has_permission(session, "view_ips") %>
        <a style="display: inline-block; font-size: 50%;" href="/ip/<%= res[:ip] %>"><%= res[:ip] %></a>
      <% end %>
      <br />
    <% end %>

    <%= erb :pagecounter, :locals => {:count => count, :page_url_generator => page_url_generator, :page => page, :path => path} %>
  </div>
  <footer class="comment">
    <%= Config.get["footer"] %>, <a href="https://github.com/dangeru/awoo/" class="footer">Awoo <%= settings.awoo_version %></a>
  </footer>
  </body>
</html>
